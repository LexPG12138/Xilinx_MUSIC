// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="fir,hls_ip_2018_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.714000,HLS_SYN_LAT=396,HLS_SYN_TPT=none,HLS_SYN_MEM=7,HLS_SYN_DSP=3,HLS_SYN_FF=500,HLS_SYN_LUT=876,HLS_VERSION=2018_2}" *)

module fir (
        ap_clk,
        ap_rst_n,
        SW_flag,
        LED,
        LED_ap_vld,
        LED_2,
        LED_2_ap_vld,
        LED_3,
        LED_3_ap_vld,
        LED_4,
        LED_4_ap_vld,
        s_axi_fir_io_AWVALID,
        s_axi_fir_io_AWREADY,
        s_axi_fir_io_AWADDR,
        s_axi_fir_io_WVALID,
        s_axi_fir_io_WREADY,
        s_axi_fir_io_WDATA,
        s_axi_fir_io_WSTRB,
        s_axi_fir_io_ARVALID,
        s_axi_fir_io_ARREADY,
        s_axi_fir_io_ARADDR,
        s_axi_fir_io_RVALID,
        s_axi_fir_io_RREADY,
        s_axi_fir_io_RDATA,
        s_axi_fir_io_RRESP,
        s_axi_fir_io_BVALID,
        s_axi_fir_io_BREADY,
        s_axi_fir_io_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 22'd1;
parameter    ap_ST_fsm_state2 = 22'd2;
parameter    ap_ST_fsm_pp0_stage0 = 22'd4;
parameter    ap_ST_fsm_state5 = 22'd8;
parameter    ap_ST_fsm_state6 = 22'd16;
parameter    ap_ST_fsm_pp1_stage0 = 22'd32;
parameter    ap_ST_fsm_state9 = 22'd64;
parameter    ap_ST_fsm_pp2_stage0 = 22'd128;
parameter    ap_ST_fsm_state12 = 22'd256;
parameter    ap_ST_fsm_pp3_stage0 = 22'd512;
parameter    ap_ST_fsm_state15 = 22'd1024;
parameter    ap_ST_fsm_pp4_stage0 = 22'd2048;
parameter    ap_ST_fsm_state18 = 22'd4096;
parameter    ap_ST_fsm_state19 = 22'd8192;
parameter    ap_ST_fsm_state20 = 22'd16384;
parameter    ap_ST_fsm_state21 = 22'd32768;
parameter    ap_ST_fsm_state22 = 22'd65536;
parameter    ap_ST_fsm_pp5_stage0 = 22'd131072;
parameter    ap_ST_fsm_state26 = 22'd262144;
parameter    ap_ST_fsm_state27 = 22'd524288;
parameter    ap_ST_fsm_state28 = 22'd1048576;
parameter    ap_ST_fsm_state29 = 22'd2097152;
parameter    C_S_AXI_FIR_IO_DATA_WIDTH = 32;
parameter    C_S_AXI_FIR_IO_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_FIR_IO_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input  [0:0] SW_flag;
output  [0:0] LED;
output   LED_ap_vld;
output  [0:0] LED_2;
output   LED_2_ap_vld;
output  [0:0] LED_3;
output   LED_3_ap_vld;
output  [0:0] LED_4;
output   LED_4_ap_vld;
input   s_axi_fir_io_AWVALID;
output   s_axi_fir_io_AWREADY;
input  [C_S_AXI_FIR_IO_ADDR_WIDTH - 1:0] s_axi_fir_io_AWADDR;
input   s_axi_fir_io_WVALID;
output   s_axi_fir_io_WREADY;
input  [C_S_AXI_FIR_IO_DATA_WIDTH - 1:0] s_axi_fir_io_WDATA;
input  [C_S_AXI_FIR_IO_WSTRB_WIDTH - 1:0] s_axi_fir_io_WSTRB;
input   s_axi_fir_io_ARVALID;
output   s_axi_fir_io_ARREADY;
input  [C_S_AXI_FIR_IO_ADDR_WIDTH - 1:0] s_axi_fir_io_ARADDR;
output   s_axi_fir_io_RVALID;
input   s_axi_fir_io_RREADY;
output  [C_S_AXI_FIR_IO_DATA_WIDTH - 1:0] s_axi_fir_io_RDATA;
output  [1:0] s_axi_fir_io_RRESP;
output   s_axi_fir_io_BVALID;
input   s_axi_fir_io_BREADY;
output  [1:0] s_axi_fir_io_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [21:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [15:0] y;
reg    y_ap_vld;
wire   [15:0] x;
reg   [0:0] LED_1_data_reg;
reg    LED_1_vld_reg;
reg    LED_1_vld_in;
reg    LED_1_ack_in;
reg   [0:0] LED_2_1_data_reg;
reg   [0:0] LED_2_1_data_in;
reg    LED_2_1_vld_reg;
reg    LED_2_1_vld_in;
reg    LED_2_1_ack_in;
reg   [0:0] LED_3_1_data_reg;
reg   [0:0] LED_3_1_data_in;
reg    LED_3_1_vld_reg;
reg    LED_3_1_vld_in;
reg    LED_3_1_ack_in;
reg   [0:0] LED_4_1_data_reg;
reg   [0:0] LED_4_1_data_in;
reg    LED_4_1_vld_reg;
reg    LED_4_1_vld_in;
reg    LED_4_1_ack_in;
reg   [0:0] last_SW_flag;
reg   [15:0] Flag;
wire   [8:0] c_L_address0;
reg    c_L_ce0;
wire   [13:0] c_L_q0;
reg   [8:0] c_address0;
reg    c_ce0;
reg    c_we0;
reg   [17:0] c_d0;
wire   [17:0] c_q0;
wire   [8:0] c_H_address0;
reg    c_H_ce0;
wire   [17:0] c_H_q0;
wire   [8:0] c_H_A_L_address0;
reg    c_H_A_L_ce0;
wire   [15:0] c_H_A_L_q0;
wire   [8:0] c_M_address0;
reg    c_M_ce0;
wire   [15:0] c_M_q0;
wire   [8:0] c_D_M_address0;
reg    c_D_M_ce0;
wire   [15:0] c_D_M_q0;
reg   [8:0] shift_reg_address0;
reg    shift_reg_ce0;
wire   [15:0] shift_reg_q0;
reg   [8:0] shift_reg_address1;
reg    shift_reg_ce1;
reg    shift_reg_we1;
reg   [15:0] shift_reg_d1;
reg   [8:0] i_4_reg_336;
reg   [8:0] i_3_reg_383;
reg   [8:0] i_2_reg_394;
reg   [8:0] i_1_reg_405;
reg   [8:0] i_reg_416;
reg   [8:0] i_5_reg_427;
reg   [37:0] acc1_reg_438;
reg  signed [15:0] reg_464;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_pp5_stage0;
reg    ap_enable_reg_pp5_iter1;
wire    ap_block_state23_pp5_stage0_iter0;
wire    ap_block_state24_pp5_stage0_iter1;
wire    ap_block_state25_pp5_stage0_iter2;
wire    ap_block_pp5_stage0_11001;
reg   [0:0] tmp_9_reg_860;
reg  signed [17:0] reg_468;
wire    ap_CS_fsm_state27;
reg  signed [15:0] x_read_reg_723;
wire   [0:0] brmerge_fu_482_p2;
reg   [0:0] brmerge_reg_730;
wire   [15:0] Flag_load_load_fu_488_p1;
reg   [15:0] Flag_load_reg_734;
wire   [15:0] tmp_2_fu_492_p2;
reg   [15:0] tmp_2_reg_739;
wire   [0:0] exitcond_fu_498_p2;
reg   [0:0] exitcond_reg_751;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [8:0] i_10_fu_504_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [63:0] tmp_1_fu_510_p1;
reg   [63:0] tmp_1_reg_760;
wire   [0:0] tmp_20_fu_537_p2;
reg   [0:0] tmp_20_reg_770;
wire    ap_CS_fsm_state6;
wire   [0:0] exitcond1_fu_543_p2;
reg   [0:0] exitcond1_reg_774;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state7_pp1_stage0_iter0;
wire    ap_block_state8_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
wire   [8:0] i_9_fu_549_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [63:0] tmp_s_fu_555_p1;
reg   [63:0] tmp_s_reg_783;
wire   [0:0] exitcond2_fu_565_p2;
reg   [0:0] exitcond2_reg_793;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state10_pp2_stage0_iter0;
wire    ap_block_state11_pp2_stage0_iter1;
wire    ap_block_pp2_stage0_11001;
wire   [8:0] i_8_fu_571_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [63:0] tmp_8_fu_577_p1;
reg   [63:0] tmp_8_reg_802;
wire   [0:0] exitcond3_fu_587_p2;
reg   [0:0] exitcond3_reg_812;
wire    ap_CS_fsm_pp3_stage0;
wire    ap_block_state13_pp3_stage0_iter0;
wire    ap_block_state14_pp3_stage0_iter1;
wire    ap_block_pp3_stage0_11001;
wire   [8:0] i_7_fu_593_p2;
reg    ap_enable_reg_pp3_iter0;
wire   [63:0] tmp_6_fu_599_p1;
reg   [63:0] tmp_6_reg_821;
wire   [0:0] exitcond4_fu_604_p2;
reg   [0:0] exitcond4_reg_831;
wire    ap_CS_fsm_pp4_stage0;
wire    ap_block_state16_pp4_stage0_iter0;
wire    ap_block_state17_pp4_stage0_iter1;
wire    ap_block_pp4_stage0_11001;
wire   [8:0] i_6_fu_610_p2;
reg    ap_enable_reg_pp4_iter0;
wire   [63:0] tmp_4_fu_616_p1;
reg   [63:0] tmp_4_reg_840;
wire  signed [33:0] acc_fu_695_p2;
reg  signed [33:0] acc_reg_850;
wire    ap_CS_fsm_state21;
wire  signed [37:0] acc_cast_fu_634_p1;
wire    ap_CS_fsm_state22;
wire   [0:0] tmp_9_fu_637_p2;
reg   [0:0] tmp_9_reg_860_pp5_iter1_reg;
wire   [8:0] i_11_fu_643_p2;
reg   [8:0] i_11_reg_864;
reg    ap_enable_reg_pp5_iter0;
wire   [63:0] tmp_15_fu_654_p1;
reg   [63:0] tmp_15_reg_874;
wire  signed [37:0] grp_fu_701_p3;
reg    ap_enable_reg_pp5_iter2;
wire   [30:0] tmp_21_fu_667_p1;
reg   [30:0] tmp_21_reg_889;
wire    ap_CS_fsm_state28;
wire   [0:0] grp_fu_457_p2;
reg   [0:0] tmp_17_reg_899;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state7;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state10;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state13;
reg    ap_enable_reg_pp3_iter1;
wire    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter0_state16;
reg    ap_enable_reg_pp4_iter1;
wire    ap_block_pp5_stage0_subdone;
reg    ap_condition_pp5_exit_iter0_state23;
reg   [15:0] ap_phi_mux_Flag_new_phi_fu_351_p18;
reg   [15:0] Flag_new_reg_347;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state19;
reg   [15:0] ap_phi_mux_Flag_loc_1_phi_fu_375_p4;
reg   [15:0] Flag_loc_1_reg_372;
reg   [8:0] ap_phi_mux_i_5_phi_fu_431_p4;
wire    ap_block_pp5_stage0;
reg   [15:0] storemerge_reg_448;
wire    ap_block_pp0_stage0;
wire    ap_block_pp1_stage0;
wire    ap_block_pp2_stage0;
wire    ap_block_pp3_stage0;
wire    ap_block_pp4_stage0;
wire   [63:0] tmp_14_fu_649_p1;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state29;
reg    ap_block_state29;
wire  signed [17:0] c_D_M_load_cast_cast_fu_515_p1;
wire  signed [17:0] c_M_load_cast_cast_c_fu_560_p1;
wire  signed [17:0] c_H_A_L_load_cast_ca_fu_582_p1;
wire  signed [17:0] c_L_load_cast_cast_c_fu_621_p1;
wire    ap_CS_fsm_state26;
reg   [15:0] grp_fu_457_p0;
wire   [0:0] SW_flag_not_fu_476_p2;
wire   [0:0] tmp_19_fu_531_p2;
wire  signed [30:0] grp_fu_709_p3;
reg   [21:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
reg    ap_idle_pp5;
wire    ap_enable_pp5;

// power-on initialization
initial begin
#0 ap_CS_fsm = 22'd1;
#0 LED_1_data_reg = 1'd0;
#0 LED_1_vld_reg = 1'b0;
#0 LED_2_1_data_reg = 1'd0;
#0 LED_2_1_vld_reg = 1'b0;
#0 LED_3_1_data_reg = 1'd0;
#0 LED_3_1_vld_reg = 1'b0;
#0 LED_4_1_data_reg = 1'd0;
#0 LED_4_1_vld_reg = 1'b0;
#0 last_SW_flag = 1'd0;
#0 Flag = 16'd0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
end

fir_c_L #(
    .DataWidth( 14 ),
    .AddressRange( 501 ),
    .AddressWidth( 9 ))
c_L_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(c_L_address0),
    .ce0(c_L_ce0),
    .q0(c_L_q0)
);

fir_c #(
    .DataWidth( 18 ),
    .AddressRange( 501 ),
    .AddressWidth( 9 ))
c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(c_address0),
    .ce0(c_ce0),
    .we0(c_we0),
    .d0(c_d0),
    .q0(c_q0)
);

fir_c_H #(
    .DataWidth( 18 ),
    .AddressRange( 501 ),
    .AddressWidth( 9 ))
c_H_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(c_H_address0),
    .ce0(c_H_ce0),
    .q0(c_H_q0)
);

fir_c_H_A_L #(
    .DataWidth( 16 ),
    .AddressRange( 501 ),
    .AddressWidth( 9 ))
c_H_A_L_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(c_H_A_L_address0),
    .ce0(c_H_A_L_ce0),
    .q0(c_H_A_L_q0)
);

fir_c_M #(
    .DataWidth( 16 ),
    .AddressRange( 501 ),
    .AddressWidth( 9 ))
c_M_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(c_M_address0),
    .ce0(c_M_ce0),
    .q0(c_M_q0)
);

fir_c_D_M #(
    .DataWidth( 16 ),
    .AddressRange( 501 ),
    .AddressWidth( 9 ))
c_D_M_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(c_D_M_address0),
    .ce0(c_D_M_ce0),
    .q0(c_D_M_q0)
);

fir_shift_reg #(
    .DataWidth( 16 ),
    .AddressRange( 500 ),
    .AddressWidth( 9 ))
shift_reg_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(shift_reg_address0),
    .ce0(shift_reg_ce0),
    .q0(shift_reg_q0),
    .address1(shift_reg_address1),
    .ce1(shift_reg_ce1),
    .we1(shift_reg_we1),
    .d1(shift_reg_d1)
);

fir_fir_io_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_FIR_IO_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_FIR_IO_DATA_WIDTH ))
fir_fir_io_s_axi_U(
    .AWVALID(s_axi_fir_io_AWVALID),
    .AWREADY(s_axi_fir_io_AWREADY),
    .AWADDR(s_axi_fir_io_AWADDR),
    .WVALID(s_axi_fir_io_WVALID),
    .WREADY(s_axi_fir_io_WREADY),
    .WDATA(s_axi_fir_io_WDATA),
    .WSTRB(s_axi_fir_io_WSTRB),
    .ARVALID(s_axi_fir_io_ARVALID),
    .ARREADY(s_axi_fir_io_ARREADY),
    .ARADDR(s_axi_fir_io_ARADDR),
    .RVALID(s_axi_fir_io_RVALID),
    .RREADY(s_axi_fir_io_RREADY),
    .RDATA(s_axi_fir_io_RDATA),
    .RRESP(s_axi_fir_io_RRESP),
    .BVALID(s_axi_fir_io_BVALID),
    .BREADY(s_axi_fir_io_BREADY),
    .BRESP(s_axi_fir_io_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .y(y),
    .y_ap_vld(y_ap_vld),
    .x(x)
);

fir_mul_mul_16s_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 34 ))
fir_mul_mul_16s_1bkb_U1(
    .din0(reg_464),
    .din1(reg_468),
    .dout(acc_fu_695_p2)
);

fir_mac_muladd_16cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 38 ),
    .dout_WIDTH( 38 ))
fir_mac_muladd_16cud_U2(
    .din0(reg_464),
    .din1(reg_468),
    .din2(acc1_reg_438),
    .dout(grp_fu_701_p3)
);

fir_mac_muladd_16dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 18 ),
    .din2_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
fir_mac_muladd_16dEe_U3(
    .din0(x_read_reg_723),
    .din1(reg_468),
    .din2(tmp_21_reg_889),
    .dout(grp_fu_709_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((brmerge_fu_482_p2 == 1'd0) & (16'd4 == Flag_load_load_fu_488_p1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state3))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((brmerge_fu_482_p2 == 1'd0) & (16'd4 == Flag_load_load_fu_488_p1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state7) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((brmerge_fu_482_p2 == 1'd0) & (16'd3 == Flag_load_load_fu_488_p1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state7))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state7);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((brmerge_fu_482_p2 == 1'd0) & (16'd3 == Flag_load_load_fu_488_p1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state10) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((brmerge_fu_482_p2 == 1'd0) & (16'd2 == Flag_load_load_fu_488_p1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state10))) begin
            ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state10);
        end else if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if (((brmerge_fu_482_p2 == 1'd0) & (16'd2 == Flag_load_load_fu_488_p1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state13) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if (((brmerge_fu_482_p2 == 1'd0) & (16'd1 == Flag_load_load_fu_488_p1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state13))) begin
            ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state13);
        end else if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
        end else if (((brmerge_fu_482_p2 == 1'd0) & (16'd1 == Flag_load_load_fu_488_p1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp3_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage0_subdone) & (1'b1 == ap_condition_pp4_exit_iter0_state16) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if (((brmerge_fu_482_p2 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (16'd0 == Flag_load_load_fu_488_p1))) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage0_subdone) & (1'b1 == ap_condition_pp4_exit_iter0_state16))) begin
            ap_enable_reg_pp4_iter1 <= (1'b1 ^ ap_condition_pp4_exit_iter0_state16);
        end else if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
        end else if (((brmerge_fu_482_p2 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (16'd0 == Flag_load_load_fu_488_p1))) begin
            ap_enable_reg_pp4_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp5_stage0_subdone) & (1'b1 == ap_condition_pp5_exit_iter0_state23) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state22)) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp5_exit_iter0_state23)) begin
                ap_enable_reg_pp5_iter1 <= (1'b1 ^ ap_condition_pp5_exit_iter0_state23);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter2 <= ap_enable_reg_pp5_iter1;
        end else if ((1'b1 == ap_CS_fsm_state22)) begin
            ap_enable_reg_pp5_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((brmerge_reg_730 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        Flag_loc_1_reg_372 <= ap_phi_mux_Flag_new_phi_fu_351_p18;
    end else if (((brmerge_fu_482_p2 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        Flag_loc_1_reg_372 <= Flag;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) | ((16'd5 == Flag_load_reg_734) & (1'b1 == ap_CS_fsm_state2)) | ((brmerge_reg_730 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (16'd0 == Flag_load_reg_734)) | ((brmerge_reg_730 == 1'd0) & (16'd1 == Flag_load_reg_734) & (1'b1 == ap_CS_fsm_state6)) | ((brmerge_reg_730 == 1'd0) & (16'd2 == Flag_load_reg_734) & (1'b1 == ap_CS_fsm_state6)) | ((brmerge_reg_730 == 1'd0) & (16'd3 == Flag_load_reg_734) & (1'b1 == ap_CS_fsm_state6)) | ((brmerge_reg_730 == 1'd0) & (16'd4 == Flag_load_reg_734) & (1'b1 == ap_CS_fsm_state6)))) begin
        Flag_new_reg_347 <= tmp_2_reg_739;
    end else if (((16'd6 == Flag_load_reg_734) & (1'b1 == ap_CS_fsm_state2))) begin
        Flag_new_reg_347 <= 16'd0;
    end else if ((~(16'd65535 == Flag_load_load_fu_488_p1) & ~(16'd5 == Flag_load_load_fu_488_p1) & ~(16'd6 == Flag_load_load_fu_488_p1) & ~(16'd0 == Flag_load_load_fu_488_p1) & ~(16'd1 == Flag_load_load_fu_488_p1) & ~(16'd2 == Flag_load_load_fu_488_p1) & ~(16'd3 == Flag_load_load_fu_488_p1) & ~(16'd4 == Flag_load_load_fu_488_p1) & (brmerge_fu_482_p2 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        Flag_new_reg_347 <= tmp_2_fu_492_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b0 == LED_1_vld_reg) & (1'b1 == LED_1_vld_in))) begin
        LED_1_vld_reg <= 1'b1;
    end else if (((1'b0 == LED_1_vld_in) & (1'b1 == 1'b1) & (1'b1 == LED_1_vld_reg))) begin
        LED_1_vld_reg <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b0 == LED_2_1_vld_reg) & (1'b1 == LED_2_1_vld_in))) begin
        LED_2_1_vld_reg <= 1'b1;
    end else if (((1'b0 == LED_2_1_vld_in) & (1'b1 == 1'b1) & (1'b1 == LED_2_1_vld_reg))) begin
        LED_2_1_vld_reg <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b0 == LED_3_1_vld_reg) & (1'b1 == LED_3_1_vld_in))) begin
        LED_3_1_vld_reg <= 1'b1;
    end else if (((1'b0 == LED_3_1_vld_in) & (1'b1 == 1'b1) & (1'b1 == LED_3_1_vld_reg))) begin
        LED_3_1_vld_reg <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b0 == LED_4_1_vld_reg) & (1'b1 == LED_4_1_vld_in))) begin
        LED_4_1_vld_reg <= 1'b1;
    end else if (((1'b0 == LED_4_1_vld_in) & (1'b1 == 1'b1) & (1'b1 == LED_4_1_vld_reg))) begin
        LED_4_1_vld_reg <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_9_reg_860_pp5_iter1_reg == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter2 == 1'b1))) begin
        acc1_reg_438 <= grp_fu_701_p3;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        acc1_reg_438 <= acc_cast_fu_634_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((brmerge_fu_482_p2 == 1'd0) & (16'd1 == Flag_load_load_fu_488_p1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_1_reg_405 <= 9'd0;
    end else if (((exitcond3_fu_587_p2 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        i_1_reg_405 <= i_7_fu_593_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((brmerge_fu_482_p2 == 1'd0) & (16'd2 == Flag_load_load_fu_488_p1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_2_reg_394 <= 9'd0;
    end else if (((exitcond2_fu_565_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        i_2_reg_394 <= i_8_fu_571_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((brmerge_fu_482_p2 == 1'd0) & (16'd3 == Flag_load_load_fu_488_p1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_3_reg_383 <= 9'd0;
    end else if (((exitcond1_fu_543_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i_3_reg_383 <= i_9_fu_549_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((brmerge_fu_482_p2 == 1'd0) & (16'd4 == Flag_load_load_fu_488_p1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_4_reg_336 <= 9'd0;
    end else if (((exitcond_fu_498_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_4_reg_336 <= i_10_fu_504_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_9_reg_860 == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        i_5_reg_427 <= i_11_reg_864;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        i_5_reg_427 <= 9'd499;
    end
end

always @ (posedge ap_clk) begin
    if (((brmerge_fu_482_p2 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (16'd0 == Flag_load_load_fu_488_p1))) begin
        i_reg_416 <= 9'd0;
    end else if (((exitcond4_fu_604_p2 == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        i_reg_416 <= i_6_fu_610_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_20_fu_537_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        storemerge_reg_448 <= x_read_reg_723;
    end else if (((tmp_20_reg_770 == 1'd0) & (1'b1 == ap_CS_fsm_state28))) begin
        storemerge_reg_448 <= {{grp_fu_709_p3[30:15]}};
    end
end

always @ (posedge ap_clk) begin
    if (((brmerge_reg_730 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        Flag <= ap_phi_mux_Flag_new_phi_fu_351_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        Flag_load_reg_734 <= Flag;
        brmerge_reg_730 <= brmerge_fu_482_p2;
        x_read_reg_723 <= x;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b0 == LED_1_vld_reg) & (1'b1 == LED_1_vld_in)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == 1'b1) & (1'b1 == LED_1_vld_in) & (1'b1 == LED_1_vld_reg)))) begin
        LED_1_data_reg <= SW_flag;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b0 == LED_2_1_vld_reg) & (1'b1 == LED_2_1_vld_in)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == 1'b1) & (1'b1 == LED_2_1_vld_in) & (1'b1 == LED_2_1_vld_reg)))) begin
        LED_2_1_data_reg <= LED_2_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b0 == LED_3_1_vld_reg) & (1'b1 == LED_3_1_vld_in)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == 1'b1) & (1'b1 == LED_3_1_vld_in) & (1'b1 == LED_3_1_vld_reg)))) begin
        LED_3_1_data_reg <= LED_3_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b0 == LED_4_1_vld_reg) & (1'b1 == LED_4_1_vld_in)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == 1'b1) & (1'b1 == LED_4_1_vld_in) & (1'b1 == LED_4_1_vld_reg)))) begin
        LED_4_1_data_reg <= LED_4_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        acc_reg_850 <= acc_fu_695_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        exitcond1_reg_774 <= exitcond1_fu_543_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        exitcond2_reg_793 <= exitcond2_fu_565_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        exitcond3_reg_812 <= exitcond3_fu_587_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        exitcond4_reg_831 <= exitcond4_fu_604_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond_reg_751 <= exitcond_fu_498_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_9_fu_637_p2 == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        i_11_reg_864 <= i_11_fu_643_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        last_SW_flag <= SW_flag;
        tmp_20_reg_770 <= tmp_20_fu_537_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) | ((tmp_9_reg_860 == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0)))) begin
        reg_464 <= shift_reg_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state20) | ((tmp_9_reg_860 == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0)))) begin
        reg_468 <= c_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_9_fu_637_p2 == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        tmp_15_reg_874[8 : 0] <= tmp_15_fu_654_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        tmp_17_reg_899 <= grp_fu_457_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_498_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_1_reg_760[8 : 0] <= tmp_1_fu_510_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        tmp_21_reg_889 <= tmp_21_fu_667_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((brmerge_fu_482_p2 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_2_reg_739 <= tmp_2_fu_492_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_fu_604_p2 == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        tmp_4_reg_840[8 : 0] <= tmp_4_fu_616_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_587_p2 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        tmp_6_reg_821[8 : 0] <= tmp_6_fu_599_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_fu_565_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        tmp_8_reg_802[8 : 0] <= tmp_8_fu_577_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        tmp_9_reg_860 <= tmp_9_fu_637_p2;
        tmp_9_reg_860_pp5_iter1_reg <= tmp_9_reg_860;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_543_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        tmp_s_reg_783[8 : 0] <= tmp_s_fu_555_p1[8 : 0];
    end
end

always @ (*) begin
    if (((1'b0 == LED_1_vld_reg) | ((1'b1 == 1'b1) & (1'b1 == LED_1_vld_reg)))) begin
        LED_1_ack_in = 1'b1;
    end else begin
        LED_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        LED_1_vld_in = 1'b1;
    end else begin
        LED_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == LED_2_1_vld_reg) | ((1'b1 == 1'b1) & (1'b1 == LED_2_1_vld_reg)))) begin
        LED_2_1_ack_in = 1'b1;
    end else begin
        LED_2_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state5))) begin
        LED_2_1_data_in = 1'd1;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state9) | ((brmerge_fu_482_p2 == 1'd0) & (16'd65535 == Flag_load_load_fu_488_p1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((brmerge_fu_482_p2 == 1'd0) & (16'd5 == Flag_load_load_fu_488_p1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((brmerge_fu_482_p2 == 1'd0) & (16'd6 == Flag_load_load_fu_488_p1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        LED_2_1_data_in = 1'd0;
    end else begin
        LED_2_1_data_in = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5) | ((brmerge_fu_482_p2 == 1'd0) & (16'd65535 == Flag_load_load_fu_488_p1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((brmerge_fu_482_p2 == 1'd0) & (16'd5 == Flag_load_load_fu_488_p1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((brmerge_fu_482_p2 == 1'd0) & (16'd6 == Flag_load_load_fu_488_p1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        LED_2_1_vld_in = 1'b1;
    end else begin
        LED_2_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == LED_3_1_vld_reg) | ((1'b1 == 1'b1) & (1'b1 == LED_3_1_vld_reg)))) begin
        LED_3_1_ack_in = 1'b1;
    end else begin
        LED_3_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state12) | ((brmerge_fu_482_p2 == 1'd0) & (16'd5 == Flag_load_load_fu_488_p1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        LED_3_1_data_in = 1'd1;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5) | ((brmerge_fu_482_p2 == 1'd0) & (16'd65535 == Flag_load_load_fu_488_p1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((brmerge_fu_482_p2 == 1'd0) & (16'd6 == Flag_load_load_fu_488_p1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        LED_3_1_data_in = 1'd0;
    end else begin
        LED_3_1_data_in = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5) | ((brmerge_fu_482_p2 == 1'd0) & (16'd65535 == Flag_load_load_fu_488_p1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((brmerge_fu_482_p2 == 1'd0) & (16'd5 == Flag_load_load_fu_488_p1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((brmerge_fu_482_p2 == 1'd0) & (16'd6 == Flag_load_load_fu_488_p1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        LED_3_1_vld_in = 1'b1;
    end else begin
        LED_3_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == LED_4_1_vld_reg) | ((1'b1 == 1'b1) & (1'b1 == LED_4_1_vld_reg)))) begin
        LED_4_1_ack_in = 1'b1;
    end else begin
        LED_4_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5) | ((brmerge_fu_482_p2 == 1'd0) & (16'd5 == Flag_load_load_fu_488_p1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        LED_4_1_data_in = 1'd1;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state12) | ((brmerge_fu_482_p2 == 1'd0) & (16'd65535 == Flag_load_load_fu_488_p1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((brmerge_fu_482_p2 == 1'd0) & (16'd6 == Flag_load_load_fu_488_p1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        LED_4_1_data_in = 1'd0;
    end else begin
        LED_4_1_data_in = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5) | ((brmerge_fu_482_p2 == 1'd0) & (16'd65535 == Flag_load_load_fu_488_p1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((brmerge_fu_482_p2 == 1'd0) & (16'd5 == Flag_load_load_fu_488_p1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((brmerge_fu_482_p2 == 1'd0) & (16'd6 == Flag_load_load_fu_488_p1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        LED_4_1_vld_in = 1'b1;
    end else begin
        LED_4_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_fu_498_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond1_fu_543_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state7 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state7 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond2_fu_565_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state10 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state10 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond3_fu_587_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state13 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state13 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond4_fu_604_p2 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state16 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state16 = 1'b0;
    end
end

always @ (*) begin
    if ((tmp_9_fu_637_p2 == 1'd1)) begin
        ap_condition_pp5_exit_iter0_state23 = 1'b1;
    end else begin
        ap_condition_pp5_exit_iter0_state23 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b0 == LED_2_1_ack_in) | (1'b0 == LED_1_ack_in) | (1'b0 == LED_4_1_ack_in) | (1'b0 == LED_3_1_ack_in)) & (1'b1 == ap_CS_fsm_state29))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter2 == 1'b0) & (ap_enable_reg_pp5_iter0 == 1'b0) & (ap_enable_reg_pp5_iter1 == 1'b0))) begin
        ap_idle_pp5 = 1'b1;
    end else begin
        ap_idle_pp5 = 1'b0;
    end
end

always @ (*) begin
    if (((brmerge_reg_730 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        ap_phi_mux_Flag_loc_1_phi_fu_375_p4 = ap_phi_mux_Flag_new_phi_fu_351_p18;
    end else begin
        ap_phi_mux_Flag_loc_1_phi_fu_375_p4 = Flag_loc_1_reg_372;
    end
end

always @ (*) begin
    if ((((brmerge_reg_730 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (16'd0 == Flag_load_reg_734)) | ((brmerge_reg_730 == 1'd0) & (16'd1 == Flag_load_reg_734) & (1'b1 == ap_CS_fsm_state6)) | ((brmerge_reg_730 == 1'd0) & (16'd2 == Flag_load_reg_734) & (1'b1 == ap_CS_fsm_state6)) | ((brmerge_reg_730 == 1'd0) & (16'd3 == Flag_load_reg_734) & (1'b1 == ap_CS_fsm_state6)) | ((brmerge_reg_730 == 1'd0) & (16'd4 == Flag_load_reg_734) & (1'b1 == ap_CS_fsm_state6)))) begin
        ap_phi_mux_Flag_new_phi_fu_351_p18 = tmp_2_reg_739;
    end else begin
        ap_phi_mux_Flag_new_phi_fu_351_p18 = Flag_new_reg_347;
    end
end

always @ (*) begin
    if (((tmp_9_reg_860 == 1'd0) & (1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        ap_phi_mux_i_5_phi_fu_431_p4 = i_11_reg_864;
    end else begin
        ap_phi_mux_i_5_phi_fu_431_p4 = i_5_reg_427;
    end
end

always @ (*) begin
    if ((~((1'b0 == LED_2_1_ack_in) | (1'b0 == LED_1_ack_in) | (1'b0 == LED_4_1_ack_in) | (1'b0 == LED_3_1_ack_in)) & (1'b1 == ap_CS_fsm_state29))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_D_M_ce0 = 1'b1;
    end else begin
        c_D_M_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        c_H_A_L_ce0 = 1'b1;
    end else begin
        c_H_A_L_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        c_H_ce0 = 1'b1;
    end else begin
        c_H_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        c_L_ce0 = 1'b1;
    end else begin
        c_L_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        c_M_ce0 = 1'b1;
    end else begin
        c_M_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        c_address0 = 9'd0;
    end else if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        c_address0 = tmp_15_fu_654_p1;
    end else if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        c_address0 = tmp_4_reg_840;
    end else if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        c_address0 = tmp_6_reg_821;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        c_address0 = tmp_8_reg_802;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        c_address0 = tmp_s_reg_783;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        c_address0 = 9'd500;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_address0 = tmp_1_reg_760;
    end else begin
        c_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state6) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0)))) begin
        c_ce0 = 1'b1;
    end else begin
        c_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        c_d0 = c_L_load_cast_cast_c_fu_621_p1;
    end else if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        c_d0 = c_H_q0;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        c_d0 = c_H_A_L_load_cast_ca_fu_582_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        c_d0 = c_M_load_cast_cast_c_fu_560_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_d0 = c_D_M_load_cast_cast_fu_515_p1;
    end else begin
        c_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((exitcond4_reg_831 == 1'd0) & (1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((exitcond3_reg_812 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((exitcond2_reg_793 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((exitcond1_reg_774 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((exitcond_reg_751 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        c_we0 = 1'b1;
    end else begin
        c_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_fu_457_p0 = Flag_loc_1_reg_372;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_457_p0 = ap_phi_mux_Flag_loc_1_phi_fu_375_p4;
    end else begin
        grp_fu_457_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        shift_reg_address0 = tmp_14_fu_649_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        shift_reg_address0 = 9'd499;
    end else begin
        shift_reg_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        shift_reg_address1 = 9'd0;
    end else if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        shift_reg_address1 = tmp_15_reg_874;
    end else begin
        shift_reg_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | ((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0)))) begin
        shift_reg_ce0 = 1'b1;
    end else begin
        shift_reg_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state28) | ((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0)))) begin
        shift_reg_ce1 = 1'b1;
    end else begin
        shift_reg_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        shift_reg_d1 = x_read_reg_723;
    end else if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        shift_reg_d1 = shift_reg_q0;
    end else begin
        shift_reg_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_20_reg_770 == 1'd0) & (1'b1 == ap_CS_fsm_state28)) | ((tmp_9_reg_860 == 1'd0) & (1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0)))) begin
        shift_reg_we1 = 1'b1;
    end else begin
        shift_reg_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b0 == LED_2_1_ack_in) | (1'b0 == LED_1_ack_in) | (1'b0 == LED_4_1_ack_in) | (1'b0 == LED_3_1_ack_in)) & (1'b1 == ap_CS_fsm_state29))) begin
        y_ap_vld = 1'b1;
    end else begin
        y_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((brmerge_fu_482_p2 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (16'd0 == Flag_load_load_fu_488_p1))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if (((brmerge_fu_482_p2 == 1'd0) & (16'd1 == Flag_load_load_fu_488_p1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if (((brmerge_fu_482_p2 == 1'd0) & (16'd2 == Flag_load_load_fu_488_p1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((brmerge_fu_482_p2 == 1'd0) & (16'd3 == Flag_load_load_fu_488_p1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((brmerge_fu_482_p2 == 1'd0) & (16'd4 == Flag_load_load_fu_488_p1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((brmerge_fu_482_p2 == 1'd0) & (16'd65535 == Flag_load_load_fu_488_p1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (((brmerge_fu_482_p2 == 1'd0) & (16'd5 == Flag_load_load_fu_488_p1)) | ((brmerge_fu_482_p2 == 1'd0) & (16'd6 == Flag_load_load_fu_488_p1))))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & ((brmerge_fu_482_p2 == 1'd1) | (~(16'd65535 == Flag_load_load_fu_488_p1) & ~(16'd5 == Flag_load_load_fu_488_p1) & ~(16'd6 == Flag_load_load_fu_488_p1) & ~(16'd0 == Flag_load_load_fu_488_p1) & ~(16'd1 == Flag_load_load_fu_488_p1) & ~(16'd2 == Flag_load_load_fu_488_p1) & ~(16'd3 == Flag_load_load_fu_488_p1) & ~(16'd4 == Flag_load_load_fu_488_p1))))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond_fu_498_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond_fu_498_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((tmp_20_fu_537_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((1'b0 == ap_block_pp1_stage0_subdone) & (exitcond1_fu_543_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (exitcond1_fu_543_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((1'b0 == ap_block_pp2_stage0_subdone) & (exitcond2_fu_565_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((1'b0 == ap_block_pp2_stage0_subdone) & (exitcond2_fu_565_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if (~((1'b0 == ap_block_pp3_stage0_subdone) & (exitcond3_fu_587_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if (((1'b0 == ap_block_pp3_stage0_subdone) & (exitcond3_fu_587_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if (~((1'b0 == ap_block_pp4_stage0_subdone) & (exitcond4_fu_604_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if (((1'b0 == ap_block_pp4_stage0_subdone) & (exitcond4_fu_604_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage0;
        end
        ap_ST_fsm_pp5_stage0 : begin
            if ((~((1'b0 == ap_block_pp5_stage0_subdone) & (tmp_9_fu_637_p2 == 1'd1) & (ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if ((((1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter2 == 1'b1)) | ((1'b0 == ap_block_pp5_stage0_subdone) & (tmp_9_fu_637_p2 == 1'd1) & (ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            if ((~((1'b0 == LED_2_1_ack_in) | (1'b0 == LED_1_ack_in) | (1'b0 == LED_4_1_ack_in) | (1'b0 == LED_3_1_ack_in)) & (1'b1 == ap_CS_fsm_state29))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Flag_load_load_fu_488_p1 = Flag;

assign LED = LED_1_data_reg;

assign LED_2 = LED_2_1_data_reg;

assign LED_2_ap_vld = LED_2_1_vld_reg;

assign LED_3 = LED_3_1_data_reg;

assign LED_3_ap_vld = LED_3_1_vld_reg;

assign LED_4 = LED_4_1_data_reg;

assign LED_4_ap_vld = LED_4_1_vld_reg;

assign LED_ap_vld = LED_1_vld_reg;

assign SW_flag_not_fu_476_p2 = (1'd1 ^ SW_flag);

assign acc_cast_fu_634_p1 = acc_reg_850;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp5_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp5_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp5_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state29 = ((1'b0 == LED_2_1_ack_in) | (1'b0 == LED_1_ack_in) | (1'b0 == LED_4_1_ack_in) | (1'b0 == LED_3_1_ack_in));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_enable_pp5 = (ap_idle_pp5 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign brmerge_fu_482_p2 = (last_SW_flag | SW_flag_not_fu_476_p2);

assign c_D_M_address0 = tmp_1_fu_510_p1;

assign c_D_M_load_cast_cast_fu_515_p1 = $signed(c_D_M_q0);

assign c_H_A_L_address0 = tmp_8_fu_577_p1;

assign c_H_A_L_load_cast_ca_fu_582_p1 = $signed(c_H_A_L_q0);

assign c_H_address0 = tmp_6_fu_599_p1;

assign c_L_address0 = tmp_4_fu_616_p1;

assign c_L_load_cast_cast_c_fu_621_p1 = $signed(c_L_q0);

assign c_M_address0 = tmp_s_fu_555_p1;

assign c_M_load_cast_cast_c_fu_560_p1 = $signed(c_M_q0);

assign exitcond1_fu_543_p2 = ((i_3_reg_383 == 9'd501) ? 1'b1 : 1'b0);

assign exitcond2_fu_565_p2 = ((i_2_reg_394 == 9'd501) ? 1'b1 : 1'b0);

assign exitcond3_fu_587_p2 = ((i_1_reg_405 == 9'd501) ? 1'b1 : 1'b0);

assign exitcond4_fu_604_p2 = ((i_reg_416 == 9'd501) ? 1'b1 : 1'b0);

assign exitcond_fu_498_p2 = ((i_4_reg_336 == 9'd501) ? 1'b1 : 1'b0);

assign grp_fu_457_p2 = ((grp_fu_457_p0 == 16'd6) ? 1'b1 : 1'b0);

assign i_10_fu_504_p2 = (i_4_reg_336 + 9'd1);

assign i_11_fu_643_p2 = ($signed(ap_phi_mux_i_5_phi_fu_431_p4) + $signed(9'd511));

assign i_6_fu_610_p2 = (i_reg_416 + 9'd1);

assign i_7_fu_593_p2 = (i_1_reg_405 + 9'd1);

assign i_8_fu_571_p2 = (i_2_reg_394 + 9'd1);

assign i_9_fu_549_p2 = (i_3_reg_383 + 9'd1);

assign tmp_14_fu_649_p1 = i_11_fu_643_p2;

assign tmp_15_fu_654_p1 = ap_phi_mux_i_5_phi_fu_431_p4;

assign tmp_19_fu_531_p2 = ((ap_phi_mux_Flag_loc_1_phi_fu_375_p4 == 16'd0) ? 1'b1 : 1'b0);

assign tmp_1_fu_510_p1 = i_4_reg_336;

assign tmp_20_fu_537_p2 = (tmp_19_fu_531_p2 | grp_fu_457_p2);

assign tmp_21_fu_667_p1 = acc1_reg_438[30:0];

assign tmp_2_fu_492_p2 = (Flag + 16'd1);

assign tmp_4_fu_616_p1 = i_reg_416;

assign tmp_6_fu_599_p1 = i_1_reg_405;

assign tmp_8_fu_577_p1 = i_2_reg_394;

assign tmp_9_fu_637_p2 = ((ap_phi_mux_i_5_phi_fu_431_p4 == 9'd0) ? 1'b1 : 1'b0);

assign tmp_s_fu_555_p1 = i_3_reg_383;

assign y = ((tmp_17_reg_899[0:0] === 1'b1) ? 16'd0 : storemerge_reg_448);

always @ (posedge ap_clk) begin
    tmp_1_reg_760[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    tmp_s_reg_783[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    tmp_8_reg_802[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    tmp_6_reg_821[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    tmp_4_reg_840[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    tmp_15_reg_874[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
end

endmodule //fir
